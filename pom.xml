<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.rub.nds</groupId>
    <artifactId>protocol-toolkit-bom</artifactId>
    <version>3.5.11</version>
    <packaging>pom</packaging>

    <name>Protocol Toolkit (Bill of Materials)</name>
    <description>Bill of Materials POM for the entire protocol attacker ecosystem used to keep dependencies in sync.</description>
    <url>https://github.com/tls-attacker/Protocol-Toolkit-BOM</url>
    <inceptionYear>2022</inceptionYear>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>jsomorovsky</id>
            <name>Juraj Somorovsky</name>
            <email>juraj.somorovsky@upb.de</email>
            <url>https://github.com/jurajsomorovsky/</url>
            <organization>UPB</organization>
            <organizationUrl>https://cs.uni-paderborn.de/en/syssec/</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>ic0ns</id>
            <name>Robert Merget</name>
            <email>robert.merget@tii.ae</email>
            <url>https://github.com/ic0ns/</url>
            <organization>TII</organization>
            <organizationUrl>https://tii.ae</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>mmaehren</id>
            <name>Marcel Maehren</name>
            <email>marcel.maehren@rub.de</email>
            <url>https://github.com/mmaehren/</url>
            <organization>NDS</organization>
            <organizationUrl>https://informatik.rub.de/nds/</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>NErinola</id>
            <name>Nurullah Erinola</name>
            <email>nurullah.erinola@rub.de</email>
            <url>https://github.com/NErinola/</url>
            <organization>NDS</organization>
            <organizationUrl>https://informatik.rub.de/nds/</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>TrueSkrillor</id>
            <name>Fabian BÃ¤umer</name>
            <email>fabian.baeumer@rub.de</email>
            <url>https://github.com/TrueSkrillor</url>
            <organization>NDS</organization>
            <organizationUrl>https://informatik.rub.de/nds/</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>lambdafu</id>
            <name>Marcus Brinkmann</name>
            <email>marcus.brinkmann@rub.de</email>
            <url>https://github.com/lambdafu</url>
            <organization>NDS</organization>
            <organizationUrl>https://informatik.rub.de/nds/</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/tls-attacker/Protocol-Toolkit-BOM.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/tls-attacker/Protocol-Toolkit-BOM.git</developerConnection>
        <tag>v3.5.11</tag>
        <url>https://github.com/tls-attacker/Protocol-Toolkit-BOM</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>rub-nexus</id>
            <name>Nexus Internal Repository</name>
            <url>https://hydrogen.cloud.nds.rub.de/nexus/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>rub-nexus</id>
            <name>Nexus Internal Repository (SNAPSHOT)</name>
            <url>https://hydrogen.cloud.nds.rub.de/nexus/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <!-- Toolkit component versions -->
        <toolkit.common.modifiableVariable.version>4.1.2</toolkit.common.modifiableVariable.version>
        <toolkit.common.protocolattacker.version>1.0.0</toolkit.common.protocolattacker.version>
        <toolkit.common.asn1tool.version>2.0.0</toolkit.common.asn1tool.version>
        <toolkit.common.x509attacker.version>2.0.0</toolkit.common.x509attacker.version>
        <toolkit.common.scannercore.version>5.3.2</toolkit.common.scannercore.version>
        <toolkit.common.coffee4j.anvil.version>1.1.1</toolkit.common.coffee4j.anvil.version>
        <toolkit.tls.dockerlib.version>2.2.3</toolkit.tls.dockerlib.version>
        <toolkit.tls.attacker.version>5.3.1</toolkit.tls.attacker.version>
        <toolkit.tls.scanner.version>5.3.2</toolkit.tls.scanner.version>
        <toolkit.tls.crawler.version>1.0.0</toolkit.tls.crawler.version>
        <toolkit.tls.breaker.version>1.0.0</toolkit.tls.breaker.version>
        <toolkit.ssh.attacker.version>1.3.0</toolkit.ssh.attacker.version>
        <toolkit.ssh.scanner.version>1.0.0</toolkit.ssh.scanner.version>
        <toolkit.anvil.core.version>1.1.5</toolkit.anvil.core.version>
        <!-- Common external dependencies -->
        <deps.jaxb.version>4.0.4</deps.jaxb.version>
        <deps.log4j.version>2.21.1</deps.log4j.version>
        <deps.commons-lang3.version>3.13.0</deps.commons-lang3.version>
        <deps.commons-text.version>1.11.0</deps.commons-text.version>
        <deps.commons-math3.version>3.6.1</deps.commons-math3.version>
        <deps.commons-net.version>3.10.0</deps.commons-net.version>
        <deps.commons-validator.version>1.7</deps.commons-validator.version>
        <deps.guava.version>32.1.3-jre</deps.guava.version>
        <deps.bouncycastle.version>1.64</deps.bouncycastle.version>
        <deps.jcommander.version>1.82</deps.jcommander.version>
        <deps.json-simple.version>1.1.1</deps.json-simple.version>
        <deps.jackson.version>2.15.3</deps.jackson.version>
        <deps.reflections.version>0.10.2</deps.reflections.version>
        <deps.dnsjava.version>3.5.2</deps.dnsjava.version>
        <deps.joda-time.version>2.12.5</deps.joda-time.version>
        <deps.docker-java.version>3.3.4</deps.docker-java.version>
        <deps.rabbitmq.version>5.20.0</deps.rabbitmq.version>
        <deps.mongodb.version>4.11.1</deps.mongodb.version>
        <deps.mongojack.version>4.8.1</deps.mongojack.version>
        <deps.quartz.version>2.3.2</deps.quartz.version>
        <deps.jakarta-persistence.version>2.2.3</deps.jakarta-persistence.version>
        <!-- Unit testing dependencies -->
        <deps.junit5.version>5.10.1</deps.junit5.version>
        <deps.mockito.version>5.7.0</deps.mockito.version>
        <deps.openpojo.version>0.9.1</deps.openpojo.version>
        <!-- Plugin versions -->
        <plugin.maven-clean-plugin.version>3.3.2</plugin.maven-clean-plugin.version>
        <plugin.maven-enforcer-plugin.version>3.4.1</plugin.maven-enforcer-plugin.version>
        <plugin.spotless-maven-plugin.version>2.40.0</plugin.spotless-maven-plugin.version>
        <plugin.flatten-maven-plugin.version>1.3.0</plugin.flatten-maven-plugin.version>
        <plugin.maven-resources-plugin.version>3.3.1</plugin.maven-resources-plugin.version>
        <plugin.jacoco.version>0.8.11</plugin.jacoco.version>
        <plugin.maven-compiler-plugin.version>3.11.0</plugin.maven-compiler-plugin.version>
        <plugin.maven-surefire-plugin.version>3.2.2</plugin.maven-surefire-plugin.version>
        <plugin.maven-jar-plugin.version>3.3.0</plugin.maven-jar-plugin.version>
        <plugin.maven-javadoc-plugin.version>3.6.2</plugin.maven-javadoc-plugin.version>
        <plugin.maven-source-plugin.version>3.3.0</plugin.maven-source-plugin.version>
        <plugin.maven-install-plugin.version>3.1.1</plugin.maven-install-plugin.version>
        <plugin.maven-dependency-plugin.version>3.6.1</plugin.maven-dependency-plugin.version>
        <plugin.maven-failsafe-plugin.version>3.2.2</plugin.maven-failsafe-plugin.version>
        <plugin.maven-gpg-plugin.version>3.1.0</plugin.maven-gpg-plugin.version>
        <plugin.maven-deploy-plugin.version>3.1.1</plugin.maven-deploy-plugin.version>
        <plugin.nexus-staging-maven-plugin.version>1.6.13</plugin.nexus-staging-maven-plugin.version>
        <plugin.versions-maven-plugin.version>2.16.1</plugin.versions-maven-plugin.version>
        <plugin.maven-release-plugin.version>3.0.1</plugin.maven-release-plugin.version>
        <!-- Reporting plugins -->
        <plugin.maven-site-plugin.version>4.0.0-M11</plugin.maven-site-plugin.version>
        <plugin.maven-project-info-reports-plugin.version>3.4.5</plugin.maven-project-info-reports-plugin.version>
        <plugin.spotbugs-maven-plugin.version>4.8.1.0</plugin.spotbugs-maven-plugin.version>
        <plugin.maven-pmd-plugin.version>3.21.2</plugin.maven-pmd-plugin.version>
        <plugin.maven-jxr-plugin.version>3.3.1</plugin.maven-jxr-plugin.version>
        <!-- Common properties -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <skip.signature>true</skip.signature>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Jackson BOM -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${deps.jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Log4J BOM -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${deps.log4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- JAXB BOM -->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-bom</artifactId>
                <version>${deps.jaxb.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- JUnit 5 BOM -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${deps.junit5.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Mockito BOM -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${deps.mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- JCommander -->
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${deps.jcommander.version}</version>
            </dependency>
            <!-- Docker Java -->
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-core</artifactId>
                <version>${deps.docker-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-transport-httpclient5</artifactId>
                <version>${deps.docker-java.version}</version>
            </dependency>
            <!-- Google Guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${deps.guava.version}</version>
            </dependency>
            <!-- JSON.simple -->
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${deps.json-simple.version}</version>
            </dependency>
            <!-- OpenPOJO -->
            <dependency>
                <groupId>com.openpojo</groupId>
                <artifactId>openpojo</artifactId>
                <version>${deps.openpojo.version}</version>
            </dependency>
            <!-- RabbitMQ -->
            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>${deps.rabbitmq.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${deps.commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${deps.commons-validator.version}</version>
            </dependency>
            <!-- Anvil-Core -->
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>anvil-core</artifactId>
                <version>${toolkit.anvil.core.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>asn1-tool</artifactId>
                <version>${toolkit.common.asn1tool.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>modifiable-variable</artifactId>
                <version>${toolkit.common.modifiableVariable.version}</version>
            </dependency>
            <!-- Common toolkit components -->
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>protocol-attacker</artifactId>
                <version>${toolkit.common.protocolattacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>scanner-core</artifactId>
                <version>${toolkit.common.scannercore.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>x509-attacker</artifactId>
                <version>${toolkit.common.x509attacker.version}</version>
            </dependency>
            <!-- SSH-Attacker -->
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>attacks</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>ssh-attacker</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>ssh-client</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>ssh-core</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>ssh-core-oqs</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>ssh-mitm</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.ssh.attacker</groupId>
                <artifactId>ssh-server</artifactId>
                <version>${toolkit.ssh.attacker.version}</version>
            </dependency>
            <!-- Coffee4j Anvil -->
            <dependency>
                <groupId>de.rub.nds.tls</groupId>
                <artifactId>coffee4j-anvil-engine</artifactId>
                <version>${toolkit.common.coffee4j.anvil.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls</groupId>
                <artifactId>coffee4j-anvil-junit-jupiter</artifactId>
                <version>${toolkit.common.coffee4j.anvil.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls</groupId>
                <artifactId>coffee4j-anvil-model</artifactId>
                <version>${toolkit.common.coffee4j.anvil.version}</version>
            </dependency>
            <!-- TLS-Attacker -->
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>tls-attacker</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>tls-client</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>tls-core</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>tls-mitm</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>tls-proxy</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>tls-server</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>trace-tool</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>transport</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.attacker</groupId>
                <artifactId>utils</artifactId>
                <version>${toolkit.tls.attacker.version}</version>
            </dependency>
            <!-- TLS-Breaker -->
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>bleichenbacher</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>breaker-commons</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>client-psk-bruteforcer</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>drown</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>heartbleed</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>invalidcurve</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>lucky13</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>paddingoracle</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>poodle</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>server-psk-bruteforcer</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>tls-breaker</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.breaker</groupId>
                <artifactId>tlspoodle</artifactId>
                <version>${toolkit.tls.breaker.version}</version>
            </dependency>
            <!-- TLS-Crawler -->
            <dependency>
                <groupId>de.rub.nds.tls.crawler</groupId>
                <artifactId>tls-crawler</artifactId>
                <version>${toolkit.tls.crawler.version}</version>
            </dependency>
            <!-- TLS-Docker-Library -->
            <dependency>
                <groupId>de.rub.nds.tls.dockerlib</groupId>
                <artifactId>tls-docker-library</artifactId>
                <version>${toolkit.tls.dockerlib.version}</version>
            </dependency>
            <!-- TLS-Scanner -->
            <dependency>
                <groupId>de.rub.nds.tls.scanner</groupId>
                <artifactId>tls-client-scanner</artifactId>
                <version>${toolkit.tls.scanner.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.scanner</groupId>
                <artifactId>tls-scanner</artifactId>
                <version>${toolkit.tls.scanner.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.scanner</groupId>
                <artifactId>tls-scanner-core</artifactId>
                <version>${toolkit.tls.scanner.version}</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.scanner</groupId>
                <artifactId>tls-server-scanner</artifactId>
                <version>${toolkit.tls.scanner.version}</version>
            </dependency>
            <!-- DNS Java -->
            <dependency>
                <groupId>dnsjava</groupId>
                <artifactId>dnsjava</artifactId>
                <version>${deps.dnsjava.version}</version>
            </dependency>
            <!-- Joda Time -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${deps.joda-time.version}</version>
            </dependency>
            <!-- Apache Commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${deps.commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${deps.commons-math3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${deps.commons-text.version}</version>
            </dependency>
            <!-- Bouncy Castle -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${deps.bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${deps.bouncycastle.version}</version>
            </dependency>
            <!-- Persistence -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>jakarta.persistence</artifactId>
                <version>${deps.jakarta-persistence.version}</version>
            </dependency>
            <!-- MongoDB -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>bson</artifactId>
                <version>${deps.mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-core</artifactId>
                <version>${deps.mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-sync</artifactId>
                <version>${deps.mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongojack</groupId>
                <artifactId>mongojack</artifactId>
                <version>${deps.mongojack.version}</version>
            </dependency>
            <!-- Scheduling -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${deps.quartz.version}</version>
            </dependency>
            <!-- Reflections -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${deps.reflections.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--################## clean lifecycle plugins ##################-->
                <!-- Plugin to remove build artifacts -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${plugin.maven-clean-plugin.version}</version>
                </plugin>
                <!--################# default lifecycle plugins #################-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${plugin.maven-enforcer-plugin.version}</version>
                </plugin>
                <!-- Plugin to format the source code -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${plugin.spotless-maven-plugin.version}</version>
                </plugin>
                <!-- Plugin to flatten pom.xml (resolve parent and variables, remove comments, etc.) before release -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${plugin.flatten-maven-plugin.version}</version>
                </plugin>
                <!-- Plugin to handle copying of resources to target -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugin.maven-resources-plugin.version}</version>
                </plugin>
                <!-- Plugin to record code coverage of unit tests -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${plugin.jacoco.version}</version>
                </plugin>
                <!-- Plugin to compile java source files -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <!-- Plugin to execute unit tests during build -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${plugin.maven-surefire-plugin.version}</version>
                </plugin>
                <!-- Plugin to pack compiled classes and resources to .jar file -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${plugin.maven-jar-plugin.version}</version>
                </plugin>
                <!-- Plugin to generate javadocs for the project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${plugin.maven-javadoc-plugin.version}</version>
                </plugin>
                <!-- Plugin to pack source files to .jar archive -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${plugin.maven-source-plugin.version}</version>
                </plugin>
                <!-- Plugin to copy packaged application .jar and dependencies to ./apps -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${plugin.maven-dependency-plugin.version}</version>
                </plugin>
                <!-- Plugin to execute integration tests during build -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${plugin.maven-failsafe-plugin.version}</version>
                </plugin>
                <!-- Plugin to install artifacts into the local mvn repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${plugin.maven-install-plugin.version}</version>
                </plugin>
                <!-- Plugin to sign artifacts for release -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${plugin.maven-gpg-plugin.version}</version>
                </plugin>
                <!-- Plugin to deploy the project to a remote repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${plugin.maven-deploy-plugin.version}</version>
                </plugin>
                <!-- Plugin to deploy the project to OSSRH / Maven Central -->
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${plugin.nexus-staging-maven-plugin.version}</version>
                </plugin>
                <!--################## site lifecycle plugins ###################-->
                <!-- Plugin used to generate a site for the project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${plugin.maven-site-plugin.version}</version>
                </plugin>
                <!-- Plugin used to generate reports information about the project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${plugin.maven-project-info-reports-plugin.version}</version>
                </plugin>
                <!-- Plugin used to generate reports based on the SpotBugs library -->
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${plugin.spotbugs-maven-plugin.version}</version>
                </plugin>
                <!-- Plugin used to generate reports for code rule violation and copy paste fragments -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${plugin.maven-pmd-plugin.version}</version>
                </plugin>
                <!-- Plugin used to generate cross-references of the project's sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${plugin.maven-jxr-plugin.version}</version>
                </plugin>
                <!--############ plugins without lifecycle bindings #############-->
                <!-- Plugin to ease version management for dependencies -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${plugin.versions-maven-plugin.version}</version>
                </plugin>
                <!-- Plugin to ease release management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${plugin.maven-release-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- WARNING: The following plugins are carefully selected and either already included by the default
                 lifecycle bindings or not bound to the lifecycle (only exception to this rule is the
                 maven-enforcer-plugin and spotless-maven-plugin). This section should not be used
                 to configure plugins. -->
            <!--################# default lifecycle plugins #################-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${maven.compiler.source}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <configuration>
                    <pom>
                        <includes>
                            <include>**/pom.xml</include>
                        </includes>
                        <sortPom>
                            <sortDependencies>scope,groupId,artifactId</sortDependencies>
                            <sortModules>true</sortModules>
                            <sortExecutions>true</sortExecutions>
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <expandEmptyElements>false</expandEmptyElements>
                            <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                        </sortPom>
                    </pom>
                    <markdown>
                        <includes>
                            <include>**/*.md</include>
                        </includes>
                        <flexmark />
                    </markdown>
                </configuration>
                <executions>
                    <execution>
                        <id>format</id>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <configuration>
                    <skip>${skip.signature}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <!--############ plugins without lifecycle bindings #############-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <scmCommentPrefix>release:</scmCommentPrefix>
                    <!--suppress UnresolvedMavenProperty -->
                    <scmReleaseCommitComment>@{prefix} @{releaseLabel}</scmReleaseCommitComment>
                    <scmDevelopmentCommitComment>@{prefix} Prepare for next development iteration</scmDevelopmentCommitComment>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Deployment to Maven Central is done by activating this profile via -P maven-release -->
        <profile>
            <id>maven-release</id>
            <distributionManagement>
                <repository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <properties>
                <!-- Artifacts pushed to maven central must be signed -->
                <skip.signature>false</skip.signature>
            </properties>
            <build>
                <plugins>
                    <!-- Artifact deployment to OSSRH -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <!-- deploy with the following command: mvn -P maven-release nexus-staging:release -->
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
